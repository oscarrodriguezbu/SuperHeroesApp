{"version":3,"sources":["autenticar/AutenticarContext.js","types/types.js","autenticar/autenticarReducer.js","routers/PrivateRoute.js","routers/PublicRoute.js","componentes/login/LoginScreen.js","componentes/ui/NavBar.js","data/heroes.js","componentes/heroes/HeroCard.js","componentes/heroes/HeroesList.js","selectors/getHeroByPublisher.js","componentes/dc/DcScreen.js","componentes/heroes/HeroScreen.js","selectors/getHeroById.js","componentes/marvel/MarvelScreen.js","componentes/search/SearchScreen.js","hooks/useForm.js","selectors/getHeroByName.js","routers/DashBoardRoutes.js","routers/AppRouter.js","HeroesApp.js","index.js"],"names":["AutenticarContext","createContext","types","autenticarReducer","state","action","type","payload","logged","PrivateRoute","isAuthenticated","Component","component","rest","localStorage","setItem","location","pathname","props","to","PublicRoute","LoginScreen","history","dispatch","useContext","className","onClick","lastPath","getItem","name","replace","Navbar","user","useHistory","activeClassName","exact","heroes","HeroCard","id","superhero","alter_ego","publisher","first_appearance","characters","style","maxWidth","src","alt","HeroesList","useMemo","includes","Error","filter","hero","getHeroByPublisher","map","DcScreen","HeroScreen","heroeId","useParams","find","length","push","goBack","MarvelScreen","SearchScreen","useLocation","queryString","parse","search","q","initialState","useState","values","setValues","target","value","useForm","searchText","formValues","handleInputChange","heroesFiltered","toLocaleLowerCase","getHeroByName","onSubmit","e","preventDefault","placeholder","onChange","autoComplete","DashBoardRoutes","path","AppRouter","init","JSON","HeroesApp","useReducer","useEffect","stringify","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d1ec69ff.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\n\r\nexport const AutenticarContext = createContext();\r\n","//esto va a contener todos los types de la aplicacion, se puede hacer por modulos pero\r\n//para este caso, es un ejercicio sencillo asi que no importa\r\n\r\nexport const types = {\r\n    login: '[autenticar] login',\r\n    logout: '[autenticar] logout',\r\n}","import { types } from \"../types/types\";\r\n\r\nexport const autenticarReducer = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case types.login:\r\n\r\n            return {\r\n                ...action.payload,\r\n                logged: true\r\n            }\r\n\r\n        case types.logout:\r\n\r\n            return {\r\n                logged: false\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","//Basicamente da acceso de forma condicional a DashBoardRoutes en el AppRouter\r\n\r\nimport React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n   /*  console.log(rest.location.pathname); */\r\n    localStorage.setItem('lastPath',rest.location.pathname);\r\n    \r\n    return (\r\n\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (isAuthenticated)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/login\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component:PropTypes.func.isRequired\r\n}","//\r\n\r\nimport React from 'react';\r\nimport { Redirect, Route } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n  \r\n    return (\r\n\r\n        <Route {...rest}\r\n            component={(props) => (\r\n                (!isAuthenticated)\r\n                    ? (<Component {...props} />)\r\n                    : (<Redirect to=\"/\" />)\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useContext } from 'react';\r\nimport { AutenticarContext } from '../../autenticar/AutenticarContext';\r\nimport { types } from '../../types/types';\r\n\r\n\r\nexport const LoginScreen = ({history}) => {\r\n\r\n    const {dispatch} = useContext(AutenticarContext);\r\n\r\n    const handleLogin = ()=> {\r\n        //history.push('/'); //vuelve hacia atrás pero en modo incognito puede ser un problema\r\n       // history.replace('/');\r\n\r\n       const lastPath = localStorage.getItem('lastPath') || '/';\r\n      \r\n       dispatch({\r\n           type:types.login,\r\n           payload: {\r\n               name: 'Oscar'\r\n           }\r\n\r\n       })\r\n        history.replace(lastPath);\r\n    }\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n\r\n            <h1>Login</h1>\r\n            <hr />\r\n\r\n            <button\r\n            className=\"btn btn-primary\"\r\n            onClick={handleLogin}\r\n            >\r\n            Login\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { Link, NavLink, useHistory } from 'react-router-dom';\r\nimport { AutenticarContext } from '../../autenticar/AutenticarContext';\r\nimport { types } from '../../types/types';\r\n\r\n\r\n\r\nexport const Navbar = () => {\r\n    const { user:{name}, dispatch } = useContext(AutenticarContext);\r\n    //console.log(value);\r\n   /*  console.log(name); */\r\n    \r\n    // El navbar es un provider y puede usar el useHistory para traer el history \r\n    const history = useHistory(); \r\n\r\n    const handleLogout = ()=>{\r\n        history.replace('login');\r\n        dispatch({            \r\n            type:types.logout\r\n        });\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark\">\r\n\r\n            <Link\r\n                className=\"navbar-brand\"\r\n                to=\"/\"\r\n            >\r\n                Asociaciones\r\n            </Link>\r\n\r\n            <div className=\"navbar-collapse\">\r\n                <div className=\"navbar-nav\">\r\n\r\n                    <NavLink\r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\"\r\n                        exact\r\n                        to=\"/marvel\"\r\n                    >\r\n                        Marvel\r\n                    </NavLink>\r\n\r\n                    <NavLink\r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\"\r\n                        exact\r\n                        to=\"/dc\"\r\n                    >\r\n                        DC\r\n                    </NavLink>\r\n                    <NavLink\r\n                        activeClassName=\"active\"\r\n                        className=\"nav-item nav-link\"\r\n                        exact\r\n                        to=\"/search\"\r\n                    >\r\n                        Search\r\n                    </NavLink>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"navbar-collapse collapse w-100 order-3 dual-collapse2\">\r\n                <ul className=\"navbar-nav ml-auto \">\r\n                    <span className=\"nav-item nav-link text-info\">\r\n                        {name}\r\n                    </span>\r\n                    <button                       \r\n                        className=\"nav-item nav-link btn\"             \r\n                        onClick= {handleLogout}          \r\n                    >\r\n                        Logout\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","export const heroes = [\r\n    {\r\n        'id': 'dc-batman',\r\n        'superhero':'Batman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Bruce Wayne',\r\n        'first_appearance':'Detective Comics #27',\r\n        'characters':'Bruce Wayne'\r\n    },\r\n    {\r\n        'id': 'dc-superman',\r\n        'superhero':'Superman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Kal-El',\r\n        'first_appearance':'Action Comics #1',\r\n        'characters':'Kal-El'\r\n    },\r\n    {\r\n        'id': 'dc-flash',\r\n        'superhero':'Flash', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Jay Garrick',\r\n        'first_appearance':'Flash Comics #1',\r\n        'characters':'Jay Garrick, Barry Allen, Wally West, Bart Allen'\r\n    },\r\n    {\r\n        'id': 'dc-green',\r\n        'superhero':'Green Lantern', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Alan Scott',\r\n        'first_appearance':'All-American Comics #16',\r\n        'characters':'Alan Scott, Hal Jordan, Guy Gardner, John Stewart, Kyle Raynor, Jade, Sinestro, Simon Baz'\r\n    },\r\n    {\r\n        'id': 'dc-arrow',\r\n        'superhero':'Green Arrow', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Oliver Queen',\r\n        'first_appearance':'More Fun Comics #73',\r\n        'characters':'Oliver Queen'\r\n    },\r\n    {\r\n        'id': 'dc-wonder',\r\n        'superhero':'Wonder Woman', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Princess Diana',\r\n        'first_appearance':'All Star Comics #8',\r\n        'characters':'Princess Diana'\r\n    },\r\n    {\r\n        'id': 'dc-martian',\r\n        'superhero':'Martian Manhunter', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'J\\'onn J\\'onzz',\r\n        'first_appearance':'Detective Comics #225',\r\n        'characters':'Martian Manhunter'\r\n    },\r\n    {\r\n        'id': 'dc-robin',\r\n        'superhero':'Robin/Nightwing', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dick Grayson',\r\n        'first_appearance':'Detective Comics #38',\r\n        'characters':'Dick Grayson'\r\n    },\r\n    {\r\n        'id': 'dc-blue',\r\n        'superhero':'Blue Beetle', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dan Garret',\r\n        'first_appearance':'Mystery Men Comics #1',\r\n        'characters':'Dan Garret, Ted Kord, Jaime Reyes'\r\n    },\r\n    {\r\n        'id': 'dc-black',\r\n        'superhero':'Black Canary', \r\n        'publisher':'DC Comics', \r\n        'alter_ego':'Dinah Drake',\r\n        'first_appearance':'Flash Comics #86',\r\n        'characters':'Dinah Drake, Dinah Lance'\r\n    },\r\n    {\r\n        'id': 'marvel-spider',\r\n        'superhero':'Spider Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Peter Parker',\r\n        'first_appearance':'Amazing Fantasy #15',\r\n        'characters':'Peter Parker'\r\n    },\r\n    {\r\n        'id': 'marvel-captain',\r\n        'superhero':'Captain America', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Steve Rogers',\r\n        'first_appearance':'Captain America Comics #1',\r\n        'characters':'Steve Rogers'\r\n    },\r\n    {\r\n        'id': 'marvel-iron',\r\n        'superhero':'Iron Man', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Tony Stark',\r\n        'first_appearance':'Tales of Suspense #39',\r\n        'characters':'Tony Stark'\r\n    },\r\n    {\r\n        'id': 'marvel-thor',\r\n        'superhero':'Thor', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Thor Odinson',\r\n        'first_appearance':'Journey into Myster #83',\r\n        'characters':'Thor Odinson'\r\n    },\r\n    {\r\n        'id': 'marvel-hulk',\r\n        'superhero':'Hulk', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Bruce Banner',\r\n        'first_appearance':'The Incredible Hulk #1',\r\n        'characters':'Bruce Banner'\r\n    },\r\n    {\r\n        'id': 'marvel-wolverine',\r\n        'superhero':'Wolverine', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'James Howlett',\r\n        'first_appearance':'The Incredible Hulk #180',\r\n        'characters':'James Howlett'\r\n    },\r\n    {\r\n        'id': 'marvel-daredevil',\r\n        'superhero':'Daredevil', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Matthew Michael Murdock',\r\n        'first_appearance':'Daredevil #1',\r\n        'characters':'Matthew Michael Murdock'\r\n    },\r\n    {\r\n        'id': 'marvel-hawkeye',\r\n        'superhero':'Hawkeye', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Clinton Francis Barton',\r\n        'first_appearance':'Tales of Suspense #57',\r\n        'characters':'Clinton Francis Barton'\r\n    },\r\n    {\r\n        'id': 'marvel-cyclops',\r\n        'superhero':'Cyclops', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Scott Summers',\r\n        'first_appearance':'X-Men #1',\r\n        'characters':'Scott Summers'\r\n    },\r\n    {\r\n        'id': 'marvel-silver',\r\n        'superhero':'Silver Surfer', \r\n        'publisher':'Marvel Comics', \r\n        'alter_ego':'Norrin Radd',\r\n        'first_appearance':'The Fantastic Four #48',\r\n        'characters':'Norrin Radd'\r\n    }\r\n]","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './myStyles.css';\r\n\r\nexport const HeroCard = ({\r\n    id,\r\n    superhero,\r\n    publisher,\r\n    alter_ego,\r\n    first_appearance,\r\n    characters,\r\n}) => {\r\n    return (\r\n\r\n        <div className=\"card ms-3\" style={{ maxWidth: 540 }}>\r\n            <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                    <img src={`./assets/heroes/${id}.jpg`} className=\"card-img\" alt={superhero} />\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{superhero} </h5>\r\n                    <p className=\"card-text\"> {alter_ego} </p>\r\n                    {\r\n                        (alter_ego !== characters)\r\n                        && <p className=\" card-text \"> {characters} </p>\r\n                    }\r\n                    <p className=\" card-text \">\r\n                        <small className=\"text-muted\">{first_appearance}</small>\r\n                    </p>\r\n\r\n                    <Link to={`./hero/${id}`} >\r\n                    Más...\r\n                    </Link>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div> \r\n        \r\n    )\r\n}\r\n\r\n/* OPCION 1:\r\n//ESTO SE HIZO EN LA CLASE DEL PROFE PERO EL DISEÑO LO HE PERSONALIZADO UN POCO\r\n<div className=\"card ms-3\" style={{ maxWidth: 540 }}>\r\n            <div className=\"row no-gutters\">\r\n                <div className=\"col-md-4\">\r\n                    <img src={`./assets/heroes/${id}.jpg`} className=\"card-img\" alt={superhero} />\r\n                </div>\r\n\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{superhero} </h5>\r\n                    <p className=\"card-text\"> {alter_ego} </p>\r\n                    {\r\n                        (alter_ego !== characters)\r\n                        && <p className=\" card-text \"> {characters} </p>\r\n                    }\r\n                    <p className=\" card-text \">\r\n                        <small className=\"text-muted\">{first_appearance}</small>\r\n                    </p>\r\n\r\n                    <Link to={`./hero/${id}`} >\r\n                    Más...\r\n                    </Link>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div> \r\n        \r\n        */\r\n\r\n        /* OPCION 2:\r\n        Tiene una animacion bastante buena peeerooo...\r\n        A esto le falta la parte responsive, pues las tarjetas se montan una tras otra a no ser que que se requiera algo asi\r\n                    pues quedaria bien porque al final, son tarjetas de superheroes xD.\r\n        \r\n        <Link to={`./hero/${id}`} className=\"my-card\">\r\n            <img src={`./assets/heroes/${id}.jpg`} className=\"img img-responsive \" alt={superhero}/>\r\n            <div className=\"profile-name\">{superhero}</div>\r\n            <div className=\"profile-position\">{alter_ego}</div>\r\n            <div className=\"profile-overview\">\r\n                <div className=\"profile-overview\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-ms-4\">\r\n                            <h3>{publisher}</h3>\r\n                            <p>Primera aparición: <br />{first_appearance}</p>\r\n                            {\r\n                                (alter_ego !== characters)\r\n                                && <p>{characters}</p>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Link>        \r\n        \r\n        */","import React, { useMemo } from 'react';\r\nimport { getHeroByPublisher } from '../../selectors/getHeroByPublisher';\r\nimport { HeroCard } from './HeroCard';\r\n\r\nexport const HeroesList = ({ publisher }) => {\r\n\r\n    const heroes = useMemo(() => getHeroByPublisher(publisher), [publisher]) ; //useMemo para optimizar la carga, se dispara cuando publisher sea diferente\r\n\r\n    return (\r\n        <div className=\"card-columns animate__animated animate__fadeIn\">\r\n            {\r\n                heroes.map(hero => (\r\n                    <HeroCard\r\n                        key={hero.id}\r\n                        {...hero}>\r\n                    </HeroCard>\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from \"../data/heroes\";\r\n\r\n\r\nexport const getHeroByPublisher = (publisher) => {\r\n    \r\n    const ValidPublishers = ['DC Comics', 'Marvel Comics'];\r\n\r\n    if (!ValidPublishers.includes(publisher)) {\r\n        throw new Error(`Publisher ${publisher} no se ha encontrado`);\r\n    }\r\n\r\n    return heroes.filter(hero => hero.publisher === publisher);\r\n}\r\n","import React from 'react'\r\nimport { HeroesList } from '../heroes/HeroesList'\r\n\r\nexport const DcScreen = () => {\r\n    \r\n\r\n    return (\r\n        <div>\r\n            <h1>DC Screen</h1>\r\n            <hr />\r\n\r\n            <HeroesList  publisher=\"DC Comics\"/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport { Redirect, useParams } from 'react-router';\r\nimport { getHeroById } from '../../selectors/getHeroById';\r\n\r\n//useParams extrae los parametros que vienen por URL\r\n\r\nexport const HeroScreen = ({ history }) => {\r\n\r\n    const { heroeId } = useParams();\r\n    const hero = useMemo(() => getHeroById(heroeId), [heroeId]);\r\n\r\n    /* console.log(hero);\r\n    console.log(heroeId); */\r\n\r\n    if (!hero) {\r\n        return <Redirect to=\"/\" />\r\n    }\r\n\r\n    const handleReturn = () => {\r\n\r\n        if (history.length <= 2) {\r\n            history.push('/');\r\n        } else {\r\n            history.goBack('/');\r\n        }\r\n\r\n    }\r\n\r\n    const {\r\n        superhero,\r\n        publisher,\r\n        alter_ego,\r\n        first_appearance,\r\n        characters,\r\n    } = hero; //esto es para evitar valores undefined\r\n\r\n    return (\r\n        <div className=\"row mt-5\">\r\n            <div className=\"col-4\">\r\n                <img\r\n                    className=\"img-thumbnail animate__animated animate__fadeInLeft\"\r\n                    src={`./assets/heroes/${heroeId}.jpg`}//../assets no se reconocia en el server de github\r\n                    alt={superhero}\r\n                />\r\n            </div>\r\n\r\n            <div className=\"col-8 animate__animated animate__fadeIn\">\r\n                <h3>{superhero} </h3>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    <li className=\"list-group-item\"><b>Alter ego: </b> {alter_ego} </li>\r\n                    <li className=\"list-group-item\"><b>Publisher: </b> {publisher} </li>\r\n                    <li className=\"list-group-item\"><b>First appearance: </b> {first_appearance} </li>\r\n                </ul>\r\n\r\n                <h5> Characters </h5>\r\n                <p> {characters} </p>\r\n\r\n                <button\r\n                    className=\"btn btn-outline-info\"\r\n                    onClick={handleReturn}\r\n                >\r\n                    Return\r\n                </button>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import { heroes } from \"../data/heroes\";\r\n\r\n\r\nexport const getHeroById = (id) => {\r\n    \r\n    return heroes.find(hero => hero.id === id);\r\n}","import React from 'react';\r\nimport { HeroesList } from '../heroes/HeroesList';\r\n\r\nexport const MarvelScreen = () => {\r\n    return (\r\n        <div>\r\n            <h1>Marvel Screen</h1>\r\n            <hr />\r\n\r\n            <HeroesList  publisher=\"Marvel Comics\"/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useMemo } from 'react';\r\nimport queryString from 'query-string'; //para sacar el query de la direccion http osea el valor de q\r\nimport { useLocation } from 'react-router';\r\n\r\nimport { heroes } from '../../data/heroes';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { HeroCard } from '../heroes/HeroCard';\r\nimport { getHeroByName } from '../../selectors/getHeroByName';\r\n\r\nexport const SearchScreen = ({ history }) => {\r\n\r\n    const location = useLocation();\r\n\r\n    //console.log(location); \r\n    // console.log(queryString.parse(location.search));\r\n    // const { q = '' } = queryString.parse(location.search); //se puede usar useMemo para no recalcular ciertos valores como location.search\r\n    const { q = '' } = useMemo(() => queryString.parse(location.search), [location.search]); //he implementado el useMemo para optimizar\r\n   /*  console.log(q); */\r\n\r\n\r\n\r\n    const initialForm = {\r\n        searchText: q\r\n    }\r\n\r\n\r\n    const [formValues, handleInputChange, reset] = useForm(initialForm);\r\n\r\n\r\n    const { searchText } = formValues;\r\n    //const heroesFiltered = heroes;\r\n\r\n    //const heroesFiltered = getHeroByName(searchText); \r\n    const heroesFiltered = useMemo(() => getHeroByName(q), [q]); //si no quiero que se cargue algo sin oprimir el boton search\r\n\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n        /* console.log(searchText); */\r\n        history.push(`?q=${searchText}`); //con esto lo que ponemos en el inpu se agrega a la direccion http de la pagina\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Search Screen</h1>\r\n            <hr />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-5\">\r\n                    <h4>Search Form</h4>\r\n                    <hr />\r\n                    <form onSubmit={handleSearch}>\r\n                        <input\r\n                            type=\"text\"\r\n                            placeholder=\"Find your hero\"\r\n                            className=\"form-control\"\r\n                            name=\"searchText\"\r\n                            value={searchText}\r\n                            onChange={handleInputChange}\r\n                            autoComplete=\"off\"\r\n                        />\r\n\r\n                        <button\r\n                            type=\"submit\"\r\n                            className=\"btn m-1 btn-block btn-outline-primary\"\r\n                        >\r\n                            Search\r\n                        </button>\r\n\r\n                    </form>\r\n\r\n                </div>\r\n\r\n                <div className=\"col-7\">\r\n                    <h4>Results </h4>\r\n                    <hr />\r\n\r\n                    {\r\n                        (q === '')\r\n                        &&\r\n                        <div className=\"alert alert-info\">\r\n                            Search a hero\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                        (q !== '' && heroesFiltered.length === 0)\r\n                        &&\r\n                        <div className=\"alert alert-danger\">\r\n                            There is no hero with {q}\r\n                        </div>\r\n                    }\r\n\r\n                    {\r\n                        heroesFiltered.map(hero => (\r\n                            <HeroCard\r\n                                key={hero.id}\r\n                                {...hero}\r\n                            />\r\n                        ))\r\n\r\n                    }\r\n\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nexport const useForm = (initialState={}) => {\r\n   \r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset =() => {\r\n        setValues(initialState);\r\n    }\r\n\r\n    const handleInputChange = ({target}) => {\r\n\r\n        setValues({\r\n            ...values, \r\n            [target.name]: target.value,\r\n        });\r\n    };\r\n\r\n    return [values, handleInputChange, reset];\r\n\r\n\r\n}\r\n\r\n\r\n/* \r\nesto se puede usar para hacer cualquier cosa como validaciones y etc */","import { heroes } from \"../data/heroes\"\r\n\r\n\r\nexport const getHeroByName = (name='') => {\r\n\r\n    if ( name=== '') {\r\n        return []\r\n    }\r\n\r\n    name = name.toLocaleLowerCase();\r\n    return heroes.filter(hero=>hero.superhero.toLocaleLowerCase().includes(name)); //toLocaleLowerCase para cambiar todo a minuscula y no tener problema\r\n}\r\n","import React from 'react';\r\nimport { Redirect, Route, Switch } from 'react-router';\r\nimport { Navbar } from '../componentes/ui/NavBar';\r\n\r\nimport { DcScreen } from '../componentes/dc/DcScreen';\r\nimport { HeroScreen } from '../componentes/heroes/HeroScreen';\r\nimport { MarvelScreen } from '../componentes/marvel/MarvelScreen';\r\nimport { SearchScreen } from '../componentes/search/SearchScreen';\r\n\r\n\r\nexport const DashBoardRoutes = () => {\r\n    return (\r\n        <>\r\n            <Navbar />\r\n\r\n            <div className=\"container mt-2\">\r\n                <Switch>\r\n\r\n\r\n                    <Route exact path=\"/marvel\" component={MarvelScreen} />\r\n                    <Route exact path=\"/hero/:heroeId\" component={HeroScreen} />\r\n                    <Route exact path=\"/dc\" component={DcScreen} />\r\n                    <Route exact path=\"/search\" component={SearchScreen} />\r\n\r\n                    <Redirect to =\"/marvel\" />\r\n\r\n\r\n                </Switch>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import React, { useContext } from \"react\";\r\n/* para subir la app a github y mostrarla en su servidor, no se renderizan las imagenes y aparecen varios archivos con\r\ncodigo 404. Por eso se ha cambiado el BrowserRouter por HashRouter, sin embargo las imagenes en  mostrar más, no aparecen*/\r\nimport {\r\n    /* BrowserRouter as Router, */\r\n    /* BrowserRouter, */\r\n    HashRouter as Router,\r\n   /*  HashRouter, */\r\n    Switch,\r\n   \r\n} from \"react-router-dom\";\r\n\r\nimport { AutenticarContext } from \"../autenticar/AutenticarContext\";\r\nimport { PrivateRoute } from \"./PrivateRoute\";\r\nimport { PublicRoute } from \"./PublicRoute\";\r\n\r\nimport { LoginScreen } from \"../componentes/login/LoginScreen\";\r\nimport { DashBoardRoutes } from \"./DashBoardRoutes\";\r\n\r\n\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const {user} = useContext(AutenticarContext);\r\n    /* console.log(user); */\r\n\r\n    return (\r\n        <Router>\r\n            <div>\r\n\r\n                <Switch>\r\n\r\n                <PublicRoute \r\n                exact path=\"/login\" \r\n                component={LoginScreen}\r\n                isAuthenticated={user.logged}\r\n                />\r\n                \r\n                <PrivateRoute  \r\n                path=\"/\" \r\n                component={DashBoardRoutes}\r\n                isAuthenticated={user.logged} />\r\n\r\n                </Switch>\r\n               \r\n\r\n                \r\n\r\n            </div>\r\n        </Router>\r\n    );\r\n}\r\n\r\n\r\n","import React, { useEffect, useReducer } from 'react';\r\nimport { AutenticarContext } from './autenticar/AutenticarContext';\r\nimport { autenticarReducer } from './autenticar/autenticarReducer';\r\nimport { AppRouter } from './routers/AppRouter';\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem('user')) || { logged: false };\r\n}\r\n\r\n\r\n\r\nexport const HeroesApp = () => {\r\n    // con esto se tiene la habilidad de obtener el usuario en cualquier parte de la aplicacion, porque está en casi el nivel mas alto de la aplicación\r\n    const [user, dispatch] = useReducer(autenticarReducer, {}, init);\r\n\r\n    //para mantener al usuario logeado\r\n    useEffect(() => {\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n    }, [user])\r\n\r\n    return (\r\n        <div>\r\n            <AutenticarContext.Provider value={{ user, dispatch }}>\r\n                <AppRouter />\r\n            </AutenticarContext.Provider>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HeroesApp } from './HeroesApp';\r\n\r\n\r\nReactDOM.render (\r\n    <HeroesApp />,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}